#!/usr/bin/env bash

# Follow however many symlinks are needed to get the true directory and name of this script
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
    SOURCE=$(readlink "$SOURCE")
    [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
SCRIPT_NAME="$( basename "$SCRIPT_DIR" )"
PYVENV="${PYVENV:-$HOME/.pyvenv}"
VENV="$PYVENV/$SCRIPT_NAME"

#
# Do any setup needed
#
deactivate 2> /dev/null
source "$VENV/bin/activate"

# Path to software entry point
SOFTWARE="uv run $SCRIPT_NAME"

# Enable ROCM
export HSA_OVERRIDE_GFX_VERSION=11.0.0
MODEL="medium.en"
MODEL_DIR="models"

OUTPUT_DIR="output"
OUTPUT_FORMAT="all"

TASK="transcribe"
LANGUAGE="en"

# Add any default args here
SOFTWARE_ARGS=$@

if ! grep -q -- "--model" <<< $SOFTWARE_ARGS; then
    SOFTWARE_ARGS="$SOFTWARE_ARGS --model $MODEL"
fi

SOFTWARE_ARGS="$SOFTWARE_ARGS --model_dir $MODEL_DIR --output_dir $OUTPUT_DIR --output_format $OUTPUT_FORMAT --task $TASK --language $LANGUAGE"

# Run software, passing all args from this script onwards
echo "Executing eval \"$SOFTWARE $SOFTWARE_ARGS\""
(cd $SCRIPT_DIR; eval "$SOFTWARE $SOFTWARE_ARGS")
